using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Net;
using System.IO;
using Google.Apis;
using Google.Apis.CloudSpeechAPI;
using Google.Apis.Http;
using Google.Apis.Auth;

namespace GoogleSpeechTest
{
    class Program
    {

        static void Main(string[] args)
        {
            File myJson = new File(@"C:\Users\Public\test.json");
            string result = "";
            using (var client = new WebClient())
            {
                client.Headers[HttpRequestHeader.ContentType] = "application/json";
                client.Headers[HttpRequestHeader.Authorization] = "Bearer ya29.Gls5BOZQz5n0cVsgRoEmAMJGVAMcYnu1gggS_MvYBCAcLf-jEZXFbXE5lmUWbxkKbArAjlT6FvSO6_cZIdD4wpFYMiZ0mICinZVmoacd5i5j2aJRa2yat5srL6LD";
                result = client.UploadString("https://speech.googleapis.com/v1/speech:recognize", "POST", json);
            }
            Console.Write(result);
            Console.ReadLine();
        }
    }
}
            /*
            try
            {

                FileStream fileStream = File.OpenRead("RBC_SAM_TEST.flac");
                MemoryStream memoryStream = new MemoryStream();
                memoryStream.SetLength(fileStream.Length);
                fileStream.Read(memoryStream.GetBuffer(), 0, (int)fileStream.Length);
                byte[] BA_AudioFile = memoryStream.GetBuffer();

                /*
                var client = new RestClient("https://speech.googleapis.com/v1/speech:recognize");
                var request = new RestRequest(Method.POST);
                request.AddHeader("postman-token", "9901783b-1139-f072-ed69-41d8553ed6bb");
                request.AddHeader("cache-control", "no-cache");
                request.AddHeader("authorization", "Bearer ya29.Gls5BOZQz5n0cVsgRoEmAMJGVAMcYnu1gggS_MvYBCAcLf-jEZXFbXE5lmUWbxkKbArAjlT6FvSO6_cZIdD4wpFYMiZ0mICinZVmoacd5i5j2aJRa2yat5srL6LD");
                request.AddHeader("content-type", "application/json");
                request.AddParameter("application/json", "{\r\n  \"config\": {\r\n    \"encoding\": \"FLAC\",\r\n    \"sampleRateHertz\": 16000,\r\n    \"languageCode\": \"en-US\"\r\n  },\r\n  \"audio\": {\r\n    \"uri\": \"gs://cloud-samples-tests/speech/brooklyn.flac\"\r\n  }\r\n}\r\n", ParameterType.RequestBody);
                IRestResponse response = client.Execute(request);

                */
            /*
            HttpWebRequest _HWR_SpeechToText = null;
            _HWR_SpeechToText =
                        (HttpWebRequest)HttpWebRequest.Create(
                           //"https://www.google.com/speech-api/v2/recognize?output=json&lang=en-us&key=AIzaSyB4BbswpZNI6u3TrY7ldZtaRm9B2s0SLAU");
                           "https://speech.googleapis.com/v1/speech:recognize");
            //_HWR_SpeechToText.Credentials = CredentialCache.DefaultCredentials;
            _HWR_SpeechToText.Method = "POST";
            _HWR_SpeechToText.ContentType = "application/json";
            _HWR_SpeechToText.Credentials = "Bearer ya29.Gls5BOZQz5n0cVsgRoEmAMJGVAMcYnu1gggS_MvYBCAcLf-jEZXFbXE5lmUWbxkKbArAjlT6FvSO6_cZIdD4wpFYMiZ0mICinZVmoacd5i5j2aJRa2yat5srL6LD";
            //_HWR_SpeechToText.ContentLength = BA_AudioFile.Length
            //  HttpRequestHeader.Authorization = "Bearer ya29.Gls5BOZQz5n0cVsgRoEmAMJGVAMcYnu1gggS_MvYBCAcLf - jEZXFbXE5lmUWbxkKbArAjlT6FvSO6_cZIdD4wpFYMiZ0mICinZVmoacd5i5j2aJRa2yat5srL6LD";
            //using (var streamWriter = new StreamWriter(_HWR_SpeechToText.GetRequestStream()))
            //{
            //    string json = ""
            //}
            */



            /*
                Stream stream = _HWR_SpeechToText.GetRequestStream();
            stream.Write(BA_AudioFile, 0, BA_AudioFile.Length);
            stream.Close();

            HttpWebResponse HWR_Response = (HttpWebResponse)_HWR_SpeechToText.GetResponse();
            if (HWR_Response.StatusCode == HttpStatusCode.OK)
            {
                StreamReader SR_Response = new StreamReader(HWR_Response.GetResponseStream());
                Console.WriteLine(SR_Response.ReadToEnd());
            }


        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.ToString());
        }

        Console.ReadLine();
        */
            /*
            CloudSpeechAPIService service = new CloudSpeechAPIService(new BaseClientService.Initializer
            {
                ApplicationName = "Speech API Test",
                ApiKey = "your API key..."
            });

            //configure the audio file properties
            RecognitionConfig sConfig = new RecognitionConfig();
            sConfig.Encoding = "FLAC";
            sConfig.SampleRate = 16000;
            sConfig.LanguageCode = "en-AU";

            //make the request and output the transcribed text to console
            SyncRecognizeResponse response = getResponse(service, sConfig, "audio file.flac");
            string resultText = response.Results.ElementAt(0).Alternatives.ElementAt(0).Transcript;
            Console.WriteLine(resultText);
            */
    //    }
    //}
//}